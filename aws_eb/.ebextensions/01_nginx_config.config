# Creates files on EC2 instance.
files:
  # Create Nginx config file.
  # This will be used by existing config file at: /etc/nginx/nginx.conf
  "/etc/nginx/conf.d/01_serve_static_assets.conf":
    mode: "000644"
    owner: root
    group: root
    # TODO: add location directive.
    content: |
      # The content of this file is based on:
      # /etc/nginx/sites-enabled/elasticbeanstalk-nginx-docker-proxy.conf
      #
      # All directives in this file must be valid in the http context.

      server {
          listen 80;

          gzip on;
          gzip_comp_level 4;
          gzip_types text/html text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

          if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
              set $year $1;
              set $month $2;
              set $day $3;
              set $hour $4;
          }
          access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;

          access_log /var/log/nginx/access.log;

          location / {
              proxy_pass            http://docker;
              proxy_http_version    1.1;

              proxy_set_header    Connection            $connection_upgrade;
              proxy_set_header    Upgrade                $http_upgrade;
              proxy_set_header    Host                $host;
              proxy_set_header    X-Real-IP            $remote_addr;
              proxy_set_header    X-Forwarded-For        $proxy_add_x_forwarded_for;
          }

          # TODO: what are gzip_static, gzip, expires, add_header?
          location /testpath {
              alias /var/app/current/public/testpath
              gzip_static on;
              gzip on;
              expires max;
              add_header Cache-Control public;
          }
      }

# Container commands run before the application version is deployed.
container_commands:
  # Restart Nginx so it will use new config files.
  01_reload_nginx:
    command: "sudo service nginx reload"
